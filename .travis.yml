# Use new container infrastructure to enable caching
sudo: required
dist: trusty

# Choose a lightweight base image; we provide our own build tools.
language: c

# Caching so the next build will be fast too.
cache:
  apt: true
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
matrix:
  include:
  # We grab the appropriate GHC and cabal-install versions from hvr's PPA. See:
  # https://github.com/hvr/multi-ghc-travis
  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22
    compiler: ": #GHC 7.10.3"

  # Build with the newest GHC and cabal-install. This is an accepted failure,
  # see below.
  - env: BUILD=cabal GHCVER=head  CABALVER=head
    compiler: ": #GHC HEAD"

  # The Stack builds. We can pass in arbitrary Stack arguments via the ARGS
  # variable, such as using --stack-yaml to point to a different file.
  - env: BUILD=stack ARGS="--resolver lts-5" GHCVER=7.10.3
    compiler: ": #stack 7.10.3"

  # Nightly builds are allowed to fail
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly"

  allow_failures:
  - env: BUILD=cabal GHCVER=head  CABALVER=head
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC

# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=""
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi

# Download and unpack the stack executable
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:$PATH
- mkdir -p ~/.local/bin
- curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

install:
- sudo -E add-apt-repository -y "ppa:hvr/ghc"
- sudo -E apt-get -yq update
- sudo -E apt-get -yq install libwxgtk3.0-dev libwxgtk-media3.0-dev libcairo2-dev libpango1.0-dev
- |
  case "$BUILD" in
    stack)
      if [ -n "$GHCVER" ]; then
        sudo -E apt-get -yq install "ghc-$GHCVER"
      fi
      ;;
    cabal)
      sudo -E apt-get -yq install "ghc-$GHCVER" "cabal-install-$CABALVER"
      ;;
  esac
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  case "$BUILD" in
    stack)
      stack install happy
      stack install alex
      stack install gtk2hs-buildtools
      stack --no-terminal --install-ghc $ARGS build --flag diagrams-wx:buildExample --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update
      cabal install happy
      cabal install alex
      cabal install gtk2hs-buildtools
      cabal install --only-dependencies --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS
      ;;
  esac

script:
- |
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS build --flag diagrams-wx:buildExample --haddock --no-haddock-deps
      ;;
    cabal)
      cabal configure -v2 -fbuildExample --ghc-options="-O0 -Werror"
      cabal build
      cabal check || [ "$CABALVER" == "1.16" ]
      cabal sdist
      cabal copy
      SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz && \
        (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
      ;;
  esac

